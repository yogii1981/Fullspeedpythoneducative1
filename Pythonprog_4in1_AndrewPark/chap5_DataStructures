# tuple consist of number of values separated by commas. Tuples
# are enclosed in parantheses, while the list are enclosed in brackets

m = (14, 34, 56)
print(m)
print(m[0])
print(m[0:2])

# Tuples also have property like indexing and slicing
i = 1
j = 2
t1 = i, j  # tuple consists of elements i and j

t2 = (3, 4, 5)
t3 = 0, t1, t2
print(t3)

# Lists

# List consists of hetrogeneous values separated by commas enclosed [and] and start from index 0
# Unlike Tuples, lists are mutable and they can be changed  by removing or reassigning the exisiting vakues

a1 = [1, 2, 3, 4, 5]
print(a1)

print(a1[0])
print(a1[0:4])

a1[3] = 20
print(a1[0:4])

# list can be nested
# list can be used as stack or a queue

b1 = [1, 2, 3, 4, 5]
print(b1[2])

b1[2] = 14  # replace 3 element in the list of b1 list
print(b1)

print(len(b1))

print(b1[-1])  # print the extreme last element
print(b1[-2])  # print the extreme last but one element before

b1.append(17)  # add a element to the list
print(b1)

# pop - last in first out
# del - first in first out

b1.pop()
print(b1)  # last element adeed was 17

del (b1[0])
print(b1)  # deleted the first element

# sets - doesn't have duplicate elements

c1 = [1, 3, 4, 5, 6, 2, 3, 5, 6, 7, 9]
uniquenum1 = set(c1)
print(uniquenum1)

print(7 in uniquenum1)
print(12 in uniquenum1)

# Dictionary - data structures indexed by keys
# key and values are separated by ":"

capitals = {'AP': 'Hydrebad', 'MH': 'Mumbai', 'DEL': 'New Delhi'}
print(capitals)
print(capitals['AP'])
capitals['TN'] = 'Chennai'
print(capitals)

# Control Flow Statements

# IF else statements

e = 6
f = 7
if e > f:
    print("e is greater than f")
else:
    print("f is greater than e")


def numberProperty1(input):
    if input % 2 == 0:
        print(input, ' is an even number')
    else:
        print(input, ' is a odd number')


numberProperty1(10)
numberProperty1(11)


##Nested IF ##

def numberProperty2(input):
    if input < 0:
        print(input, ' is a negative number')
    elif input == 0:
        print(input, 'is Zero')
    else:
        print(input, 'is positive')


numberProperty2(7)
numberProperty2(-1)

# While loop#
a = 1
while (a < 10):
    print('The number is: ', a)
    a = a + 2


def printseries(start, end, interval):
    print("\n")
    temp = start
    while (temp < end):
        print(temp),
        temp += interval


printseries(1, 21, 2)
